@using System.Diagnostics
@using Newtonsoft.Json
@model Happimeter.Server.Services.MovieService.MovieServiceModel
@{
    ViewBag.Title = "HappinessMovie";
}
@section AddToHead
{
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/jquery.slick/1.6.0/slick.css" />
    <script type="text/javascript" src="//cdn.jsdelivr.net/jquery.slick/1.6.0/slick.min.js"></script>
}
<div class="movie-canvas">
    <script src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=visualization&key=AIzaSyBdG_9bXDe9gRU2J-0Zu3n6QEyNDnGXtBk"></script>
    <div class="movie movie-canvas" style="height: 100%;">
        <div class="movie-slide-container" style="height: 100%; background-color: #A8CD1B">
            <div class="movie-slide-text">
                <div class="">
                    <p>Welcome to your Happiness-Movie</p>
                    <p>Press the Button below to get started</p>
                    <button onclick="startMovie()">Start Movie</button>
                </div>
            </div>
        </div>
        <div class="movie-slide-container" style="height: 100%; background-image: url('/Content/Movie/FirstSlide.jpeg');">
            <div class="tlt movie-slide-text">
                <div class="texts">
                    <div id="name-text"></div>
                    <div>Welcome to your personal HAPPINESS-MOVIE</div>
                    <div id="happiness-percentage-text"></div>
                    @if (Model.NumberLocations == 0)
                    {
                        <div>Unfortunatly u deactivated GPS, so we couldn't track your movement</div>
                        <div></div>
                    }
                    else
                    {
                        <div>We tracked your MOVEMENT too...</div>
                        <div id="number-locations-text"></div>
                        <div>Lets take a look!</div>
                        <div></div>
                    }
                </div>
            </div>
        </div>
        @if (Model.NumberLocations != 0)
        {


            <div id="map-canvas" style="width: 100%; height: 100%;"></div>
            <div class="movie-slide-container" style="height: 100%; background-image: url('/Content/Movie/FirstSlide.jpeg');">
                <div class="tlt-slide3 movie-slide-text">
                    <div class="texts">
                        <div>We also marked places WHERE you have been happy</div>
                        <div>This will help you KEEP TRACK of your happiness</div>
                        <div>GREEN spots on the map indicate a happy mood...</div>
                        <div>RED spots the oposite.</div>
                        <div></div>
                    </div>
                </div>
            </div>
            <div id="heatmap-canvas" style="width: 100%; height: 100%"></div>
        }
        <div class="movie-slide-container" style="height: 100%; background-image: url('/Content/Movie/FirstSlide.jpeg');">
            <div class="tlt-slide5 movie-slide-text">
                <div class="texts">
                    <div>Lets get a little bit more into detail...</div>
                    <div id="pleasance-to-yesterday-text"></div>
                    <div>compared to yesterday.</div>
                    <div id="activation-to-yesterday-text"></div>
                    <div></div>
                </div>
            </div>
        </div>
        <div class="movie-slide-container" style="height: 100%;">
            <div class="tlt-slide-final movie-slide-text">
                <div class="texts">
                    <div>Thank you for watching.</div>
                    <div>Please don't forget to fill out the survey</div>
                    <div>you cann access the survey here...</div>
                    <a link="https://goo.gl/forms/RheSvy8rrmHOU7hs2">Survey</a>
                </div>
            </div>
        </div>
        
    </div>
</div>



<script type="text/javascript">
    var audio = new Audio('/Content/Movie/soundtrack.mp3');
    var json = @Html.Raw(JsonConvert.SerializeObject(Model));
    $(document).ready(function() {

        init();
        $('.movie').slick({
            dots: false,
            infinite: true,
            speed: 300,
            slidesToShow: 1,
            adaptiveHeight: false,
            accessibility: false,
            arrows: false
        });

    });

    var init = function() {
        $('#name-text').html("Hello " + json.Name + ".");
        $('#happiness-percentage-text').html("today you have been HAPPY " + json.HappinessRatio + "% of your time");
        @if (Model.NumberLocations != 0)
        {
            @Html.Raw("$('#number-locations-text').html('and found ' + json.NumberLocations + ' LOCATIONS you have been to...');");
        }
        $();
        if (json.HappinessToYesterday >= 0) {
            $('#pleasance-to-yesterday-text').html('You have been ' + json.HappinessToYesterday + '% more Happy...');
        } else {
            $('#pleasance-to-yesterday-text').html('You have been ' + json.HappinessToYesterday*-1 + '% less Happy...');
        }
        
        
        if (json.ActivationToYesterday >= 0) {
            $('#activation-to-yesterday-text').html("And " + json.ActivationToYesterday + "% more Active.");
        } else {
            $('#activation-to-yesterday-text').html("And " + json.ActivationToYesterday*-1 + "% less Active.");
        }
        
    }

    var startMovie = function() {
        audio.play();
        $('.movie').slick('slickNext');
        firstSlide();
    }



    var firstSlide = function() {
        $(".tlt").textillate({
            in: { effect: 'bounceInUp', sync:true },
            out: { effect: 'bounceOutDown', sync:true }
        });

        $(".tlt").on("end.tlt",
            function() {

                @if (Model.NumberLocations == 0)
                {
                    @Html.Raw("fithSlide();")
                }
                else
                {
                    @Html.Raw("secondSlide();")
                }                
            });
    }

    var secondSlide = function() {
        var jsonList = json.MovieDataPoints;
        
        var myLatLng = new google.maps.LatLng(jsonList[0].SensorData.GeoLat, jsonList[0].SensorData.GeoLng),
            myOptions = {
                zoom: 15,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                draggable: false,
                mapTypeControl: false,
                zoomControl: false,
                scrollwheel: false,
                streetViewControl: false,
                disableDoubleClickZoom: true
            },
            map = new google.maps.Map(document.getElementById('map-canvas'), myOptions),
            marker = new google.maps.Marker({ position: myLatLng, map: map });
        var infowindow = new google.maps.InfoWindow({
            content: "-"
        });

        marker.setMap( map );
        infowindow.open( map, marker);

        google.maps.event.addListenerOnce(map,
            'idle',
            function() {
                $('.movie').slick('slickNext');
                $('#map-canvas').addClass('animated bounceInDown');
                moveMarker(map, marker, infowindow);
            });

        

        function moveMarker( map, marker, infowindow ) {

            var counter = 0;
            var updateFunction = function() {
                if (counter < jsonList.length) {
                    var lat = jsonList[counter].SensorData.GeoLat;
                    var lng = jsonList[counter].SensorData.GeoLng;

                    var time = jsonList[counter].SensorData.Timestamp;
                    var contentHtml = "<div class='map-happy-container'>";
                    contentHtml += "<div class='map-happy-icon-container'>";
                    if (jsonList[counter].MoodData.Pleasant == 0) {
                        contentHtml += '<i class="fa fa-frown-o map-happy-icon" aria-hidden="true"></i>';
                    } else if (jsonList[counter].MoodData.Pleasant == 1) {
                        contentHtml += '<i class="fa fa-meh-o map-happy-icon" aria-hidden="true"></i>';
                    } else {
                        contentHtml += '<i class="fa fa-smile-o map-happy-icon" aria-hidden="true"></i>';
                    }
                    contentHtml += '</div>';
                    contentHtml += jsonList[counter].MoodData.IsCalculated ? 'predicted' : 'provided';
                    contentHtml += '<br />';
                    contentHtml += new Date(time).toLocaleTimeString();
                    contentHtml += '</div>';
                    infowindow.setContent(contentHtml);

                    marker.setPosition(new google.maps.LatLng(lat, lng));
                    map.panTo(new google.maps.LatLng(lat, lng));
                    counter++;
                    setTimeout(updateFunction, 500);
                } else {
                    setTimeout(function() {
                        $('#map-canvas').addClass('animated bounceOutUp');
                        setTimeout(thirdSlide, 1500);
                    }, 500);
                }
            }
            //delayed so you can see it move
            updateFunction();
        };
    }

    var thirdSlide = function() {
        $('.movie').slick('slickNext');
        $(".tlt-slide3").textillate({
            in: { effect: 'bounceInRight', sync:true },
            out: { effect: 'bounceOutLeft', sync:true }
        });
        $(".tlt-slide3").on("end.tlt",
            function() {

                fourthSlide();
            });
    }

    var fourthSlide = function() {
        var heatMapRawData = @Html.Raw(JsonConvert.SerializeObject(Model.MovieDataPoints.Select(x => x.HeatMapData)));
        var mapBounds = new google.maps.LatLngBounds();

        var happyMapData = [];
        var sadMapData = [];


        var myOptions = {
            zoom: 15,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            draggable: false,
            mapTypeControl: false,
            zoomControl: false,
            scrollwheel: false,
            streetViewControl: false,
            disableDoubleClickZoom: true
        },
            map = new google.maps.Map(document.getElementById('heatmap-canvas'), myOptions);

        for (var i = 0; i < heatMapRawData.length; i++) {
            var position = new google.maps.LatLng(heatMapRawData[i].GeoLat, heatMapRawData[i].GeoLng);

            mapBounds.extend(position);
            console.log(heatMapRawData[i].Pleasance);
            if (heatMapRawData[i].Pleasance > 1 && Math.random()) {
                happyMapData.push({ location: position, weight: heatMapRawData[i].Pleasance + heatMapRawData[i].Activation });//if really happy also Activation is 1
            } else {
                sadMapData.push({ location: position, weight: 1 + heatMapRawData[i].Activation });//if sad happy also Activation is 1
            }
        }


        var happyGradient = [
            'rgba(0, 255, 0, 0)',
            'rgba(0, 255, 0, 0.8)',
            'rgba(0, 255, 0, 1)'
        ];
        var happyHeatmap = new google.maps.visualization.HeatmapLayer({
            data: happyMapData,
            radius: 75
        });
        happyHeatmap.set('gradient', happyGradient);
        happyHeatmap.setMap(map);

        var sadGradient = [
            'rgba( 155,0,0,  0)',
            'rgba(155,0, 0,  0.4)',
            'rgba(155,0, 0,  0.6)'
        ];
        var sadHeatmap = new google.maps.visualization.HeatmapLayer({
            data: sadMapData,
            radius: 75,
            dissapating: false
        });
        sadHeatmap.set('gradient', sadGradient);
        sadHeatmap.setMap(map);

        map.fitBounds(mapBounds);
        google.maps.event.addListenerOnce(map,
            'idle',
            function() {
                $('.movie').slick('slickNext');
                $('#heatmap-canvas').addClass('animated bounceInDown');
            });

        setTimeout(function() {
            $('#heatmap-canvas').addClass('animated bounceOutUp');
            setTimeout(fithSlide, 1500);
            },
            5000);
    }

    var fithSlide = function() {
        $('.movie').slick('slickNext');
        $(".tlt-slide5").textillate({
            in: { effect: 'bounceInRight', sync:true },
            out: { effect: 'bounceOutLeft', sync:true }
        });

        $(".tlt-slide5").on("end.tlt",
            function() {
                $('.movie').slick('slickNext');
                finalSlide();
            });
    }

    var finalSlide = function() {
        $(".tlt-slide-final").textillate({
            in: { effect: 'bounceInRight', sync:true },
            out: { effect: 'bounceOutLeft', sync:true }
        });

        $(".tlt-slide-final").on("end.tlt",
            function() {
                audio.pause();
            });
    }

</script>